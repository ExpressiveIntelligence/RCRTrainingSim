Scene irb.

BackgroundAsset irb: |./irb_background.png|.

Character student irb |Brad|.
CharacterAsset student irb |./brad.png|.
CharacterLocation student irb [0, 0].

Character teacher irb |Ned|.
CharacterAsset teacher irb |./ned.png|.
CharacterLocation teacher irb [0, 0].

# Scene specific predicates
fluent CharacterSelected.
fluent Initialized.

InitialSceneState irb:
    [now [Not [CharacterSelected]]]
    [now [Not [BeginEvent]]]
    [now [Initialized]]

    [set NedFrustration = 0]
    [set CurrentBeat = beat_1]
    [set SnarkOMeter = 0]
[end]

# Declare all fragments
[randomly]
Fragment character_select irb.
Fragment select_ned irb.
Fragment select_ned irb.

Fragment beat_1_root irb.
Fragment beat_1_ned_talks_low_snark irb.
Fragment beat_1_ned_talks_med_snark irb.
Fragment beat_1_ned_talks_high_snark irb.

# Fragment brad_is_late irb.
# Fragment irb_vent irb.
# Fragment apology irb.
Fragment temp irb.
Fragment temp_high irb.

Content character_select: Who are you? |(Character selection)|
Effects character_select.
Conditions character_select.
GoToChoice character_select ned.
GoToChoice character_select brad.

# Fragment content
Content select_ned: You're skimming through your email, killing time before one of your students arrives for a check-in meeting about a research project that he's leading the charge on. He's been vocal about his displeasure with the slow process of getting IRB approval, which has already taken over a month.
Effects select_ned: [now [CharacterSelected]]
Conditions select_ned.
ChoiceLabel select_ned: Ned Prescott, Advisor
GoToChoice select_ned brad_is_late.


Content select_brad: Hi. This universe doesn't exist yet
Effects select_brad: [now [CharacterSelected]]
Conditions select_brad.
ChoiceLabel select_brad: Brad, Student
GoToChoice select_brad temp.

## END CHARACTER SELECT ##

## BEAT 1 ## 
Content beat_1_root:  Brad rushes in, out of breath. "Sorry Prof. Ned. Missed my alarm..."
Conditions beat_1_root.
Effects beat_1_root: 
    [set NedFrustration = NedFrustration + 1]
    [set CurrentBeat = beat_1]
    [set SnarkOMeter = 0]
[end]
ChoiceCondition beat_1_root choice_1: [= CurrentBeat beat_1]
# ChoiceCondition beat_1_root [= CurrentBeat beat_1].
# ChoiceCondition beat_1_root [= CurrentBeat beat_1].


Content beat_1_ned_talks_low_snark:  
ChoiceLabel: No worries! I was late myself, it's a busy world!
Effects beat_1_ned_talks_low_snark: 
    [set CurrentBeat = beat_1]
    [set SnarkOMeter = SnarkOMeter] 
[end]
ChoiceCondition beat_1_ned_talks_low_snark: [= CurrentBeat beat_1]

Content beat_1_ned_talks_med_snark:  
ChoiceLabel: No worries! Though we've got to rush, I'm on a timer.
Effects beat_1_ned_talks_med_snark: 
    [set CurrentBeat = beat_1]
    [set SnarkOMeter = SnarkOMeter + 1] 
[end]
ChoiceCondition beat_1_ned_talks_med_snark: [= CurrentBeat beat_1]

# Content beat_1_ned_talks_high_snark:  
# ChoiceLabel:  Third time this week.
# Effects beat_1_ned_talks_high_snark: 
#     [set CurrentBeat = beat_1]
#     [set SnarkOMeter = SnarkOMeter + 2] 
# [end]
# ChoiceCondition beat_1_ned_talks_high_snark [= CurrentBeat beat_1].













# Content brad_is_late: Brad rushes in, out of breath.
# ChoiceLabel brad_is_late: Where is he?
# Effects brad_is_late.
# Conditions brad_is_late.
# ChoiceCondition brad_is_late choice1: [BeginEvent]
# Content brad_is_late.
# ChoiceCondition brad_is_late choice2: [BeginEvent]


# Content irb_vent: This IRB thing is taking forever.
# ChoiceLabel irb_vent: I'm so sorry for being late Prof. Ned!
# Effects irb_vent: [now [BeginEvent]]
# Conditions irb_vent.

# Content apology: I'm so sorry for being late Prof. Ned!
# Speaker brad apology.
# Effects apology: [now [BeginEvent]]
# Conditions apology.

Content temp: placeholder
ChoiceLabel temp: placeholder
Effects temp.
Conditions temp.

Content temp_high: placeholder2
Effects temp_high.
Conditions temp_high.

# Define the Story Spec as a list of wants and fufillments
[randomly]
Want irb initialized.
Want irb character_selected.
Want irb events.

[randomly]
Fulfilled initialized: [Initialized]
Fulfilled character_selected: [CharacterSelected]
Fulfilled events: [BeginEvent]