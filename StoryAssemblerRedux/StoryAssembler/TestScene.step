

# Must declare the scene for various checks to succeed
Scene test.

[randomly]
Fragment disastrous_date test.
Fragment on_the_path test.
Fragment not_on_the_path test.
Fragment hard test.
Fragment bad test.

# Scene specific predicates
fluent Dating ?person1 ?person2.
fluent Dislikes ?person1 ?person2.
fluent Married ? ?.

InitialSceneState test:
    [set ^Initialized = true]
    [now [Not [Dating ally protagonist]]]
[end]

Content disastrous_date: Ally and protagonist go to a high end restaurant. Ally orders a $100 bottle of wine. Protagonist is offended. 
Conditions disastrous_date:
    [Not [Dating ally protagonist]]
[end]
Effects disastrous_date. # no effects
Speaker disastrous_date ?speaker: [= ?speaker "ally"]
[randomly]
ChoiceSpec disastrous_date ends_badly: 
    [Dislikes ally protagonist]
[end]
ChoiceSpec disastrous_date tentative_recovery: 
    [Dating ally protagonist]
[end]

Content unapologetic: ""
[randomly] ChoiceLabel unapologetic: You won't even spend $100 on me?.
Effects unapologetic:
    [now [Dislikes ally protagonist]]
[end]
Conditions unapologetic.

Content apology: ""
[randomly] ChoiceLabel apology: I'm sorry I ordered the wine, give me another chance?.
Effects apology:
    [now [Dating ally protagonist]]
[end]
Conditions apology.

Content not_on_the_path: "In another town, someone else is dating"
Effects not_on_the_path:
    [now [Dating someone_else another_person]]
[end]
Conditions not_on_the_path.

Content hard: "I do"
Effects hard:
    [now [Married ally protagonist]]
[end]
Conditions hard:
    [Dating ally protagonist]
[end]

Content bad: "bad"
Effects bad.

[randomly]
Want test initialized.
Want test characters_dating.
# Want test goal_true.
# [ [Want Test initialized] [Want test characters_dating] ].


[randomly]
Fulfilled initialized:
    [= ^Initialized true]
[end]
Fulfilled characters_dating: 
    [Dating ally protagonist]
[end]
# Fulfilled goal_true: 
#     [= ^Goal true]
# [end]

# Another scene
# ... with an incomplete storyspec
Scene incomplete_scene.
InitialSceneState incomplete_scene:
    [set Initialized = false]
[end]

[randomly]
Want incomplete_scene initialized.
Fulfilled initialized:
    [= ^Initialized true]
[end]