initially:
    [set ^CurrentScene = test]
    [set ^AddTemp = empty]
[end]

Br: [Paragraph]

# Call ?call one time and return the result but reset variables and text output
# Example usage: [Backtrack [SetA ?args] ?result] would call 
# [SetA ?args ?result]
# exactly one time and bind the the final argument to ?result
Backtrack ?call ?result:
    [FindAll ?intermediate_result [BacktrackHelper ?call ?intermediate_result] [?result]]
[end]
BacktrackHelper ?call ?result:
    [ExactlyOnce [Call ?call ?result]]
[end]

# Custom list operations

# Add an element to a list
Add ?element ?list ?new_list:
    [set ^AddTemp = ?list]
    [AddHelper ?element]
    [= ?new_list ^AddTemp]
[end]
AddHelper ?element:
    [add ?element ^AddTemp]
[end]

SetUnion ?l1 ?l2 ?union:
    [set ^AddTemp = empty]
    [ForEach [Member ?x ?l1] [AddHelper ?x]]
    [ForEach [Member ?y ?l2] [Not [Member ?y ?l1]] [AddHelper ?y]]
    [= ?union ^AddTemp]
[end]

SetIntersection ?l1 ?l2 ?int:
    [set ^AddTemp = empty]
    [ForEach [Member ?x ?l1] [Member ?x ?l2] [AddHelper ?x]]
    [= ?int ^AddTemp]
[end]

Cat ?l1 ?l2 ?cat:
    [set ^AddTemp = empty]
    [ForEach [Member ?x ?l1] [AddHelper ?x]]
    [ForEach [Member ?y ?l2] [AddHelper ?y]]
    [= ?cat ^AddTemp]
[end]

Flatten2D ?list empty: [Length ?list 0]
Flastten2D ?list empty: [NotAny [InnerMember ?m ?list]]
Flatten2D ?list ?flattened:
    [FindAll ?member [InnerMember ?member ?list] ?flattened]
[end]
[predicate]
InnerMember ?m ?list:
    [Member ?sublist ?list] [Member ?m ?sublist]
[end]

Reverse ?list ?reversed:
    [set ^AddTemp = empty]
    [ForEach [Member ?x ?list] [AddHelper ?x]]
    [= ?reversed ^AddTemp]
[end]

[predicate]
ToTuple ?a ?b ?tuple:
    [= ?tuple [?a ?b]]
[end]

RemoveFromList ?m ?list ?without:
    [FindAll ?n [Member ?n ?list] [Different ?m ?n] ?without]
[end]

Last ?last ?list:
    [Reverse ?list ?reversed]
    [set ^Reversed = ?reversed]
    [removeNext ?last ^Reversed]
[end]

# Custom max check
[predicate]
MaxOf ?x ?y ?max: [< ?x ?y] [set ?max = ?y]
MaxOf ?x ?y ?max: [set ?max = ?x]