# How to find the max of something
# [generator] # equiv to [predicate] I believe
# Generate b 2.
# Generate a 1.
# [Max ?score [Generate ?x ?score]] ?x ?score

initially: 
    [set MaxDepth = 3]
    [set CurDepth = 0]
[end]

Mention ?x: [Write ?x]

BestPath ?best_frag ?score:
    [Max ?score [ScoreFragment ?best_frag ?score]]
    Path score ?score [Paragraph]
[end]

[predicate]
ScoreFragment ?frag ?score:
    # Enforce recursion limit
    [> ^MaxDepth ^CurDepth] 
    [inc ^CurDepth]
    # Get an avilable fragment in the scene
    [AvailableFragment ?frag ^CurrentScene]
    [Paragraph]
    # Apply the fragment's effects
    [Effects ?frag]
    # Recursively call BestPath to get the best outgoing path
    # [BestPath ?best_outgoing ?best_outgoing_score]
    # The issue here is that bestpath needs to undo all of the things that it did
    # Get the score and bind it to the ?score arg
    [Score ?frag ?score]
[end]
ScoreFragment ?frag ?score:
    Default ?frag
    [Paragraph]
    [AvailableFragment ?frag ^CurrentScene]
    [Conditions ?frag]
    [Score ?frag ?score]
[end]
ScoreFragment ?frag ?score:
    Error, unavailable scene ?frag
    [Paragraph]
    [Fragment ?frag ^CurrentScene]
    [= ?score 0]
[end]

# This is the hard part
[predicate]
Score ?fragment ?score:
    [Fragment ?fragment ?scene] # get the scene
    [CompleteStorySpec ?scene]
    [= ?score 100]
[end]
Score not_on_the_path ?score: [= ?score 2]
Score on_the_path ?score: [= ?score 1]
Score hard ?score: [= ?score 3]
Score ?fragment ?score: [= ?score 0]