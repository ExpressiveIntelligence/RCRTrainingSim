initially: 
    [set MaxDepth = 5]
    [set CurDepth = 0]
    [set MaxValue = 100]
    [set PathList = empty]
    [set AllPaths = empty]
[end]

predicate TopFrag ?fragments ?frag ?score. 
predicate AllSatisfiableChoices ?source ?satisfying_frags.

# Mention ?x: [Write ?x]

# There are three types of choices: 
# 1. GoTo: 
#       Go to a specific fragment based on its id
# 2. ChoiceSpec: 
#       Find a fragment that satisfies the choice spec 
#       Each choice must have a choice label
# 3. TopLevel: 
#       Find a fragment that does not have a choice label

PrintAllSatisfiableChoices ?source_frag:
    [AllSatisfiableChoices ?source_frag ?specs]
    Potential choices from ?source_frag: ?specs
[end]

AllSatisfiableChoices root empty. # there is no source frag
AllSatisfiableChoices ?source_frag ?satisfying_frag_list: # TODO this doesn't return the choice_id. Do we need this?
    [Different ?source_frag root]
    [FindAll ?frag [SatisfyableChoiceSpec ?source_frag ?choice_id ?frag] ?satisfying_frag_list]
[end]

# Returns true if ?satisfying_frag satisfies ?source_frag's choice ?choice_id
[predicate]
SatisfyableChoiceSpec ?source_frag ?choice_id ?satisfying_frag: 
    [ExistsChoiceLabel ?satisfying_frag]        # the new fragment must have a choice label
    [Conditions ?satisfying_frag]
    [Effects ?satisfying_frag]            # apply the effects of the new frag
    [ChoiceSpec ?source_frag ?choice_id]  # see if they satisfy the choice spec of the source frag
    [Available ?satisfying_frag]          # TODO I can't put this at the top even though it would speedup
[end]

[predicate]
AlternateAllSatisfiableChoices ?source_frag ?satisfying_frag_list: # Need to test the speed of this one... faster?
    [ExistsChoiceLabel ?satisfying_frag]        # the new fragment must have a choice label
    [Conditions ?satisfying_frag]
    [Effects ?satisfying_frag]            # apply the effects of the new frag
    [ChoiceSpec ?source_frag ?choice_id]  # see if they satisfy the choice spec of the source frag
    [Available ?satisfying_frag]          # TODO I can't put this at the top even though it would speedup
    [FindAll ?satisfying_frag [SatisfyableChoiceSpec ?source_frag ?choice_id ?satisfying_frag] ?satisfying_frag_list]
[end]

[predicate]
AllAvailableTopLevelFragments ?fragments:
    [FindAll ?frag [AvailableTopLevelFragment ?frag] ?fragments]
[end]

[predicate]
AvailableTopLevelFragment ?frag:
    [TopLevelFragment ?frag]    # must not have a choice label
    [Available ?frag]
    [Conditions ?frag]
[end]

[predicate]
AllGoToChoices root empty.  # there is no source frag
AllGoToChoices ?source_frag ?fragments:
    [Different ?source_frag root]
    [FindAll ?frag [AvailableGoTo ?source_frag ?frag] ?fragments]
[end]

[predicate]
AvailableGoTo ?source_frag ?target_frag:
    [GoToChoice ?source_frag ?target_frag]
    [Available ?target_frag]
    [Conditions ?target_frag]
[end]

# Find all outgoing paths from ?frag
[predicate]
FindPaths ?frag ?path:
    [Length ?path ?depth]
    [>= ?depth ^MaxDepth]
    [add ?path ^AllPaths]
[end]
FindPaths ?frag ?path:
    [case ?frag] [Different root] : [Visit ?frag] [else] [end]
    [NotAny [SelectAvailableFragment ?frag ?new_node]]
    [add ?path ^AllPaths]
[end]
FindPaths ?frag ?path:
    [case ?frag] [Different root] : [Visit ?frag] [else]  [end]
    [FindUnique ?child [SelectAvailableFragment ?frag ?child] ?all_children]
    [ForEach [Member ?member ?all_children] [Add ?member ?path ?new_path] [FindPaths ?member ?new_path]]
[end]

# RankPaths ?paths:
#     # [FindUnique ?path [Member ?path ?paths] ?unique_paths]
#     # [DoAll [Member ?path ?paths] [ScorePath ?path ?value]]
#     [ArgMax ?path ?value [Member ?path ?paths] [ScorePath ?path ?value]]
# [end]

ScorePath ?list ?value: [Length ?list 0] [StateHeuristic ?value]
ScorePath ?list ?value: [RemoveNext ?frag ?list ?new_list] [Visit ?frag] [ScorePath ?new_list]


[predicate]
SelectAvailableFragment ?source_frag ?target_frag: [AvailableGoTo ?source_frag ?target_frag]
SelectAvailableFragment ?source_frag ?target_frag: [SatisfyableChoiceSpec ?source_frag ?choice_id ?target_frag]
SelectAvailableFragment ?source_frag ?target_frag: [AvailableTopLevelFragment ?target_frag]

[predicate]
AllAvailableFragments root ?fragments:      [AllAvailableTopLevelFragments ?fragments]
AllAvailableFragments ?cur_frag ?fragments: [AllAvailableHelper ?cur_frag ?available_base_frags] [CheckAvailableOrGoRoot ?available_base_frags ?fragments]

AllAvailableHelper ?cur_frag ?fragments: [AllSatisfiableChoices ?cur_frag ?choices] [AllGoToChoices ?cur_frag ?gotos] [SetUnion ?choices ?gotos ?fragments]
CheckAvailableOrGoRoot ?available_base_frags ?fragments: [= ?available_base_frags empty] [AllAvailableTopLevelFragments ?fragments]
CheckAvailableOrGoRoot ?available_base_frags ?fragments: [= ?fragments ?available_base_frags]

[predicate]
PathValue ?path ?value:
    [Reverse ?path ?in_order]
    [Length ?path ?depth]
    [CountAttempts ?count] [removeNext ?frag ?path] [Visit ?frag] [= ?count ?depth] # Do this for each path
[end]

AA: >

# This is the hard part
[predicate]
ValueHeuristic ?fragment ?value:
    [Fragment ?fragment ?scene] # get the scene
    [CompleteStorySpec ?scene]
    [= ?value ^MaxValue]
[end]
Value not_on_the_path ?value: [= ?value 1]
Value on_the_path ?value: [= ?value 2]
Value hard ?value: [= ?value 3]
ValueHeuristic ?fragment ?value: [Fragment ?fragment ?scene] [= ?value 0]