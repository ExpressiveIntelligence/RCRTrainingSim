# Score a path
# Also reverse it to put make it a FIFO list (it arrives in reversed order)
ScorePath ?path ?scored_path: [Reverse ?path ?ordered_path] [ScoreCalculation ?ordered_path ?value] [ScoredPath ?ordered_path ?value ?scored_path]

## The data structure of a path that has been scored
ScoredPath ?path ?score ?scored_path: [= ?scored_path [?path ?score]] 

ScoreCalculation ?path 0:
    # Paths ending with a request (dynamic node) are not allowed and should not be considered
    [Not [Length ?path 0]]
    [Last [?last ?] ?path]
    [Request ?last ? ?]
[end]
ScoreCalculation ?path ?value: 
    [LengthValue ?path ?length_value]
    [SatisfactionValue ?path ?satisfied_value] 
    [set Value = ?length_value + MaxDepth * ?satisfied_value] 
    [= ?value Value]
[end]

SpeakerModeValue ?path ?value: 
# TODO we want to allow dialogue and monologue
[end]

[predicate]
LengthValue ?path ?value:
    [Length ?path ?depth]
    [set Value = -?depth] [= ?value Value]
[end]

SatisfactionValue ?path ?value: [Length ?path 0] [= ?value 0]
SatisfactionValue ?path ?value: [WantsSatisfied ?value]

WantsSatisfied ?count:
    [FindAll ?want_id [FulfilledInScene ?want_id] ?satisfied_wants]
    [Length ?satisfied_wants ?count]
[end]
WantsSatisfied 0.

[predicate]
FulfilledInScene ?want_id:
    [Want CurrentScene ?want_id]
    [Fulfilled ?want_id]
[end]