# Declare the scene
Scene e0001.

# Declare asset paths
BackgroundAsset e0001: |./scene_name_background.png|.

# Scene specific predicates
fluent PleasantriesOver ?scene.
[function]
fluent Check ?thread ?frag.

# Scene specific tasks
OpenThreads:
    [OpenCheckpoint beneficence_intro beneficence]
    [OpenCheckpoint justice justice_intro]
    [OpenCheckpoint respect respect_intro]
    [OpenCheckpoint milgram you_remember]
[end]

# Define the initial state as required by StoryAssembler
InitialSceneState e0001: 
	[Not [PleasantriesOver e0001]]
	[set BradInsecurityToNed = 0]
	[set Thread = none]
	[set Learnings = empty]
[end]

# Declare the characters and locations
Character brad e0001 |Brad|.
CharacterAsset brad e0001 |./brad.png|.
CharacterLocation brad e0001 [c0, 0].

Character ned e0001 |Ned|.
CharacterAsset ned e0001 |./ned.png|.
CharacterLocation ned e0001 [0, 0].

# Declare all fragments
[randomly]
Fragment entry e0001.
Fragment outside e0001.
Fragment sneaky e0001.
Fragment bus e0001.
Fragment grill e0001.
Fragment play_off e0001.
Fragment enter e0001.
Fragment youre_late e0001.
Fragment no_worries e0001.
Fragment doubt e0001.
Fragment relief e0001.
Fragment reflect e0001.
Fragment remind e0001.
Fragment lament e0001.
Fragment overworked e0001.
Fragment silence e0001.
Fragment subjects e0001.
Fragment t0002_start e0001.
Fragment slides e0001.
Fragment phd e0001.
Fragment phd_r e0001.
Fragment classes e0001.
Fragment classes_r e0001.
Fragment department e0001.
Fragment department_r e0001.
Fragment admin e0001.
Fragment admin_r e0001.
Fragment what_else e0001.
Fragment what_else_top_level e0001.
Fragment what_else_transition e0001.
Fragment stress e0001.
Fragment need_success e0001.
Fragment project_status e0001.
Fragment project e0001.
Fragment insecurity_start e0001.
Fragment insecurity_doubt e0001.
Fragment stressed e0001.
Fragment different_today e0001.
Fragment say_something e0001.
Fragment exit_bad e0001.
Fragment grants_funding e0001.
Fragment dissapointed_feeling e0001.
Fragment frazzled e0001.
Fragment really_hard e0001.
Fragment apologizes e0001.
Fragment accept_apology e0001.
Fragment doubt_apology e0001.
Fragment thanks e0001.
Fragment t0004_intro e0001.
Fragment proud_of_me e0001.
Fragment survey_was_fun e0001.
Fragment get_ahead e0001.
Fragment sounds_great e0001.
Fragment sounds_great_2 e0001.
Fragment confession_1 e0001.
Fragment ned_shocked e0001.
Fragment brad_panicking e0001.
Fragment confession_2 e0001.
Fragment with_concern e0001.
Fragment talked_to_parents e0001.
Fragment when_approval e0001.
Fragment herb e0001.
Fragment oregano e0001.
Fragment irb e0001.
Fragment confession_3 e0001.
Fragment ned_dont_press e0001.
Fragment bad_feeling e0001.
Fragment brad_goes_along e0001.
Fragment beneficence_intro e0001.
Fragment beneficence_define e0001.
Fragment research_good_thing e0001.
Fragment not_enough e0001.
Fragment research_is_beneficial e0001.
Fragment everyone_thinks_research_good e0001.
Fragment brad_confused e0001.
Fragment medical_trials e0001.
Fragment brad_unsure e0001.
Fragment brad_cocky e0001.
Fragment brad_curious e0001.
Fragment do_u_get_it e0001.
Fragment brad_silent e0001.
Fragment brad_notices e0001.
Fragment u_dont_understand e0001.
Fragment side_effects e0001.
Fragment side_effects_transition e0001.
Fragment avoid_harm e0001.
Fragment apply_principle e0001.
Fragment figuring_out e0001.
Fragment minimize_maximize e0001.
Fragment makes_sense e0001.
Fragment justice_intro e0001.
Fragment brad_jokes e0001.
Fragment why_board e0001.
Fragment ned_corrects e0001.
Fragment ned_corrects_transition e0001.
Fragment principles_important e0001.
Fragment just_making_a_joke e0001.
Fragment brad_apologizes e0001.
Fragment dont_take_lightly e0001.
Fragment wym e0001.
Fragment syphilis e0001.
Fragment violation_of_ben e0001.
Fragment yes_beneficence e0001.
Fragment violation_of_something e0001.
Fragment violation_of_justice e0001.
Fragment respect_intro e0001.
Fragment placeholder e0001.
Fragment top_level_fallback e0001.
Fragment you_remember e0001.
Fragment milgram_confusion e0001.
Fragment milgram_blank_stare e0001.
Fragment omg_yes e0001.
Fragment describe_milgram1 e0001.
Fragment describe_milgram2 e0001.
Fragment milgram_cringe e0001.
Fragment brad_why e0001.
Fragment milgram_explain e0001.


# Fragments
Content entry: Welcome to Academical!
Conditions  entry.
Effects     entry.
GoToChoice  entry outside.

Content outside: Brad reaches the door of his advisor's office and pauses. He wipes the sweat from underneath his glasses and takes a deep breath, trying to calm his racing heart. Could he even come clean? Hoping he had the willpower for the impending conversation, he raises his hand to the door.
Speaker outside brad.
ChoiceLabel outside: Stand outside of Ned's office
GoToChoice outside bus.
GoToChoice outside grill.
GoToChoice outside play_off.
GoToChoice outside sneaky.
Effects outside: [set Thread = entry]
Conditions outside.

Content sneaky: This is a development cheat fragment
Speaker sneaky ned.
ChoiceLabel sneaky: Cheat
GoToChoice sneaky enter.
ChoiceCondition sneaky sneaky_c: [AvailableCheckpoint insecurity]
ChoiceCondition sneaky sneaky_cc: [AvailableCheckpoint insecurity]
ChoiceCondition sneaky sneaky_ccc: [AvailableCheckpoint insecurity]
Effects sneaky: 
	[OpenThreads]
	[set Thread = entry]
[end]
Conditions sneaky.

Content bus: Brad hesitates outside of the door. He is already late. The bus had taken an extra thirty minutes to get to campus this morning, and now he doesn’t have enough time to prepare as much as he would have liked.
Speaker bus brad.
ChoiceLabel bus: Take a moment to reflect
GoToChoice bus enter.
Effects bus: [set Thread = entry]
Conditions bus: [= Thread entry]

Content grill: Ned had a reputation for being passionate, but not unfair. He'd always been a bit tough on Brad, despite his outward kindness. He was sharp and was probably going to detect that Brad was hiding something. He should probably come clean about it: Ned will find out eventually. But… maybe he doesn’t need to. It's Ned's fault that the approval took so long to submit, and Brad is running out of time. Even if Ned did find out, he would understand, right…?
Speaker grill brad.
ChoiceLabel grill: Think about the meeting with Ned
GoToChoice grill enter.
GoToChoice grill lament.
Effects grill: [set Thread = entry]
Conditions grill: [= Thread entry]

Content play_off: Brad knows it’s better to come clean about his mistake, but the delay had jeopardized his progress. He could lay this down carefully to Ned, and tell him that he was on track, without elaborating on what that meant. Brad grips the doorknob a little tighter and makes a decision: he’ll tell the truth, just not the whole truth.
Speaker play_off brad.
ChoiceLabel play_off: Think about playing off his mistake
GoToChoice play_off enter.
GoToChoice play_off lament.
Effects play_off: [set Thread = entry]
Conditions play_off: [= Thread entry]

Content enter: Ned clearly hadn’t missed Brad’s late arrival. No more stalling. Brad squares his shoulders and shuts the door behind himself.
Speaker enter ned.
ChoiceLabel enter: Enter the office
GoToChoice enter youre_late.
Effects enter: [set Thread = entry]
Conditions enter: [= Thread entry]

Content youre_late: "Ah, there you are!" Ned says cheerfully. "I was beginning to wonder if we'd canceled this week."
Speaker youre_late ned.
ChoiceLabel youre_late: Greet Ned
GoToChoice youre_late no_worries.
Effects youre_late: [set Thread = entry]
Conditions youre_late: [= Thread entry]

Content no_worries: "It's just us today," Ned smiles, "But I do have a time limit.I have a lecture right after this, so we’ll have to make this quick."
Speaker no_worries ned.
ChoiceLabel no_worries: Continue
GoToChoice no_worries doubt.
GoToChoice no_worries relief.
GoToChoice no_worries reflect.
Effects no_worries: [set Thread = entry]
Conditions no_worries: [= Thread entry]

Content doubt: 
	Brad can't tell if Ned doesn’t care or is just trying to relieve the tension. 
	
	"There was a problem with the buses..." Brad starts lamely, but then cuts himself off.
[end]
Speaker doubt brad.
ChoiceLabel doubt: Blame the buses
GoToChoice doubt remind.
Effects doubt: [set Thread = entry][set BradInsecurityToNed = BradInsecurityToNed + 1]
Conditions doubt: [= Thread entry]

Content relief: 
	Ned seems like he's in a good mood. Maybe this will be easier than expected.
	
	Brad smiles and says, "Sorry for being late, Ned, you know those buses never run on time."
	
	Ned nods understandingly. 
	
	"You're right, they run on wheels," Ned answers with a grin. The tension in the room eases, and Brad feels relieved.
[end]
Speaker relief brad.
ChoiceLabel relief: Comment on the buses
GoToChoice relief remind.
Effects relief: [set Thread = entry]
Conditions relief: [= Thread entry]

Content reflect: Brad found out pretty soon after arriving at the lab that he had not been Ned's first choice. Ned's pick ended up at another university, and Brad had received the acceptance notice. Brad sometimes wonders if he’d been accepted because Ned just needed to reach a quota. Ned was hard on Brad, had him double and triple check his data, show up early to their lab meetings (to curb his tendency to arrive late), and was quick to correct his spoken mistakes. He was a brilliant researcher and Brad valued his attention, when he received it.
Speaker reflect brad.
ChoiceLabel reflect: Reflect on Brad’s relationship with Ned
GoToChoice reflect remind.
ChoiceCondition reflect reflect_c: [AvailableCheckpoint entry]
ChoiceCondition reflect reflect_cc: [AvailableCheckpoint entry]
ChoiceCondition reflect reflect_ccc: [AvailableCheckpoint entry]
Effects reflect: 
	[set Thread = entry]
	[OpenCheckpoint agenda t0002_start]
	[OpenCheckpoint insecurity insecurity_start]
[end]
Conditions reflect: [= Thread entry]

Content remind: Ned interrupts Brad's train of thought. "Remind me where you're at again? Were you able to start on those surveys yet?" He pauses, and with some emphasis adds "Or are we still sitting on them?" He glances at his stack of notes, possibly annoyed. "I think we had decided we wanted to interview the children as well as their parents, is that right?"
Speaker remind ned.
ChoiceLabel remind: Ned interrupts his train of thought
ChoiceCondition remind remind_c: [AvailableCheckpoint entry]
ChoiceCondition remind remind_cc: [AvailableCheckpoint entry]
ChoiceCondition remind remind_ccc: [AvailableCheckpoint entry]
Effects remind: [set Thread = entry]
Conditions remind: [= Thread entry]

Content lament: Brad dreaded the impending assumption that he hadn't gotten anything done this week. Sure, there had been weeks where he'd been more focused on his semi-pro hacky sack career, and Ned had noticed. But he'd been in the lab the past seven days! Surely this time he deserved some recognition.
Speaker lament brad.
ChoiceLabel lament: Ponder Ned's assumptions
GoToChoice lament youre_late.
GoToChoice lament overworked.
GoToChoice lament silence.
GoToChoice lament subjects.
Effects lament: [set BradInsecurityToNed = BradInsecurityToNed + 1][set Thread = entry]
Conditions lament: [= Thread entry]

Content overworked: Some of Brad's friends were in a lab that encouraged a four day work week, versus the six days Brad works. How can someone who works even on the weekends still have a reputation of laziness?
Speaker overworked brad.
ChoiceLabel overworked: Think about reputation
GoToChoice overworked youre_late.
Effects overworked: [set Thread = entry]
Conditions overworked: [= Thread entry]

Content silence: There is a moment of silence as Brad struggles to find something to say. The moment stretches to a few seconds. Ned looks on expectantly.
Speaker silence brad.
ChoiceLabel silence: Consider what to say
GoToChoice silence youre_late.
Effects silence: [set Thread = entry]
Conditions silence: [= Thread entry]

Content subjects: Brad thinks about the participant surveys he had conducted over the past week. He had been so proud of his progress, even though he wasn't technically supposed to start yet. He managed to find a way around the IRB requirements and he is quite pleased with all that he accomplished despite the challenges. Perhaps he will get the grant he's gunning for after all.
Speaker subjects brad.
ChoiceLabel subjects: Feel proud of accomplishments
GoToChoice subjects youre_late.
Effects subjects: [set Thread = entry]
Conditions subjects: [= Thread entry]


Content t0002_start: Brad met with Ned weekly. They used a shared document to track - oh shoot - he forgot to update the document yesterday.
Speaker t0002_start brad.
ChoiceLabel t0002_start: [Agenda]
Agenda: [Not [Expanded t0002_start CurrentScene]] Move on to the Agenda
Agenda: Let's go back to the Agenda
GoToChoice t0002_start slides.
Effects t0002_start: 
        [set BradInsecurityToNed = BradInsecurityToNed + 1]
        [set Thread = agenda]
        [OpenCheckpoint agenda slides]
[end]
Conditions t0002_start.
Reusable t0002_start e0001.
CharacterTag t0002_start ned expression angry.

Content slides: He hadn't prepared, but he could wing it. These meetings always followed the same format... they’d check in on his classes, on graduation, and talk about new happenings in the field.
Speaker slides brad.
ChoiceLabel slides: Consider improvising
GoToChoice slides phd.
GoToChoice slides classes.
GoToChoice slides department.
GoToChoice slides admin.
Effects slides: [set Thread = agenda]
Conditions slides.
Reusable slides e0001.

Content phd: "I feel like I've made good progress on my degree - I can see the finish line! What should focus on next?" Brad asked, feigning confidence.
Speaker phd brad.
ChoiceLabel phd: Bring up PhD Progress
GoToChoice phd phd_r.
Effects phd: [set Thread = agenda]
Conditions phd.
Reusable phd e0001.

Content phd_r: 
	"Yeah, you're doing a great job! However, in order to secure funding, you should also work on publishing some quality research within the next year."
	
	Of course! Publishing was the key to career success. Brad wanted immediate funding too. But there wasn't an easy answer they could put down in a meeting.
[end]
Speaker phd_r ned.
ChoiceLabel phd_r: Listen to Ned's recommendation
GoToChoice phd_r what_else.
Effects phd_r: [set Thread = agenda]
Conditions phd_r.
Reusable phd_r e0001.

Content classes: 
	"What about auditing a class? It would maybe help me expand my network and develop a diverse skillset."
	
	Brad’s friend in the stats department was teaching a class that would be an obvious pick.
[end]
Speaker classes brad.
ChoiceLabel classes: Ask about auditing classes
GoToChoice classes classes_r.
Effects classes: [set Thread = agenda]
Conditions classes.

Content classes_r: 
	"Although auditing is a great thing to do, I don’t think it should be your priority right now. Right now, you'll benefit more from diving deeper into your current projects."
	
	Ned was right - Brad already felt overworked and overwhelmed. A new project wasn’t going to help. Time to think of something else.
[end]
Speaker classes_r ned.
ChoiceLabel classes_r: Listen to Ned’s opinion
GoToChoice classes_r what_else.
Effects classes_r: [set Thread = agenda]
Conditions classes_r.

Content department: 
	"So, the whole department is talking about Katherine and company. Do you know what’s going on?"
	
	These meetings usually included gossip at some point, anyway. It couldn't hurt to broach it early.
[end]
Speaker department brad.
ChoiceLabel department: Bring up department drama
GoToChoice department department_r.
ChoiceCondition department department_c: [AvailableCheckpoint agenda]
ChoiceCondition department department_cc: [AvailableCheckpoint agenda]
ChoiceCondition department department_ccc: [AvailableCheckpoint agenda]
Effects department: [set Thread = agenda]
Conditions department.

Content department_r: 
	"That’s not important -- department politics aren’t a place you want to spend too much time as a student."
	
	Ned was right, but the quick shutdown was a surprise. Was that somewhat of a slight?
[end]
Speaker department_r ned.
ChoiceLabel department_r: Ned Responds
GoToChoice department_r what_else.
ChoiceCondition department_r department_r_c: [AvailableCheckpoint agenda]
ChoiceCondition department_r department_r_cc: [AvailableCheckpoint agenda]
ChoiceCondition department_r department_r_ccc: [AvailableCheckpoint agenda]
Effects department_r: 
	[set BradInsecurityToNed = BradInsecurityToNed + 1]
	[set Thread = agenda]
[end]
Conditions department_r.

Content admin: 
	"Well, are there any key deadlines or forms I've got to hop on?"
	
	Brad could always count on some administrative business to be brought up during these check-ins.
[end]
Speaker admin brad.
ChoiceLabel admin: Ask about admin work
GoToChoice admin admin_r.
ChoiceCondition admin admin_c: [AvailableCheckpoint agenda]
ChoiceCondition admin admin_cc: [AvailableCheckpoint agenda]
ChoiceCondition admin admin_ccc: [AvailableCheckpoint agenda]
Effects admin: [set Thread = agenda]
Conditions admin.
Reusable admin e0001.

Content admin_r: 
	"At this point, the deadlines depend on what you want to publish and where. We've got a lot of momentum on our Child Moral Development project; perhaps that's a good place for us to focus this meeting? We have some important admin work to do with the IRB."
	
	Brad was so excited about the project. So excited, in fact, that he had already started to interview parents with the survey he’d developed.
	
	"How do you feel about it? What do we need to do next?"
[end]
Speaker admin_r ned.
ChoiceLabel admin_r: Ned Responds
GoToChoice admin_r stress.
GoToChoice admin_r project.
ChoiceCondition admin_r admin_r_c: [AvailableCheckpoint agenda]
ChoiceCondition admin_r admin_r_cc: [AvailableCheckpoint agenda]
ChoiceCondition admin_r admin_r_ccc: [AvailableCheckpoint agenda]
Effects admin_r: 
	[set Thread = agenda]
	[OpenCheckpoint agenda what_else_transition]
[end]
Conditions admin_r.
Reusable admin_r e0001.

Content what_else: "What else is on the agenda for today?"
Speaker what_else ned.
ChoiceLabel what_else: Continue
GoToChoice what_else stress.
GoToChoice what_else project.
ChoiceCondition what_else what_else_c: [AvailableCheckpoint agenda]
ChoiceCondition what_else what_else_cc: [AvailableCheckpoint agenda]
ChoiceCondition what_else what_else_ccc: [AvailableCheckpoint agenda]
Effects what_else: 
	[set Thread = agenda]
	[OpenCheckpoint agenda what_else_transition]
[end]
Conditions what_else.
Reusable what_else e0001.

Content what_else_top_level: "What else should we talk about?" asks Ned.
Speaker what_else_top_level ned.
ChoiceLabel what_else_top_level: Continue
GoToChoice what_else_top_level stress.
GoToChoice what_else_top_level project.
ChoiceCondition what_else_top_level what_else_top_level_c: [AvailableCheckpoint agenda]
ChoiceCondition what_else_top_level what_else_top_level_cc: [AvailableCheckpoint agenda]
ChoiceCondition what_else_top_level what_else_top_level_ccc: [AvailableCheckpoint agenda]
Effects what_else_top_level: 
	[set Thread = agenda]
	[OpenCheckpoint agenda what_else_transition]
[end]
Conditions what_else_top_level.
Reusable what_else_top_level e0001.

Content what_else_transition: "We're a bit limited on time for today - let's stay on track and put that idea on next week’s agenda."
Speaker what_else_transition ned.
ChoiceLabel what_else_transition: Ned looks at the clock
GoToChoice what_else_transition stress.
GoToChoice what_else_transition project.
ChoiceCondition what_else_transition what_else_transition_c: [AvailableCheckpoint agenda]
ChoiceCondition what_else_transition what_else_transition_cc: [AvailableCheckpoint agenda]
ChoiceCondition what_else_transition what_else_transition_ccc: [AvailableCheckpoint agenda]
Effects what_else_transition: [set Thread = agenda]
Conditions what_else_transition.
Reusable what_else_transition e0001.

Content stress: 
	Most of Brad’s time was spent working on this project- his motivation wasn’t purely out of interest. The project provided a such direct path to future publications and funding that it seemed like his entire degree hinged on its success.
	
	"It's great but the pressure is honestly a little high. It can be hard to cope."
[end]
Speaker stress brad.
ChoiceLabel stress: Though the project is exciting, it's stressful!
GoToChoice stress need_success.
ChoiceCondition stress stress_c: [AvailableCheckpoint agenda]
ChoiceCondition stress stress_cc: [AvailableCheckpoint agenda]
ChoiceCondition stress stress_ccc: [AvailableCheckpoint agenda]
Effects stress: [set Thread = agenda]
Conditions stress.
Reusable stress e0001.

Content need_success: "I get it. It's easy to get overwhelmed, but try to take it one step at a time. For example, we can take one large task and break it down into many smaller tasks.That’ll make things easier! Let's try it. What are you working on right now?"
Speaker need_success ned.
ChoiceLabel need_success: Listen to Ned's advice
GoToChoice need_success project_status.
ChoiceCondition need_success need_success_c: [AvailableCheckpoint agenda]
ChoiceCondition need_success need_success_cc: [AvailableCheckpoint agenda]
ChoiceCondition need_success need_success_ccc: [AvailableCheckpoint agenda]
Effects need_success: 
	[set Thread = agenda]
	[set BradInsecurityToNed = BradInsecurityToNed + 1]
[end]
Conditions need_success.

Content project_status: "I wanted to talk about that, you mentioned some more paperwork I need to do for the surveys."
Speaker project_status brad.
ChoiceLabel project_status: Bring up adminstration
ChoiceCondition project_status project_status_c: [AvailableCheckpoint agenda]
ChoiceCondition project_status project_status_cc: [AvailableCheckpoint agenda]
ChoiceCondition project_status project_status_ccc: [AvailableCheckpoint agenda]
Effects project_status: 
	[set Thread = agenda]
	[OpenCheckpoint agenda what_else_transition]
	[OpenCheckpoint irb t0004_intro]
[end]
Conditions project_status.
Reusable project_status e0001.

Content project: 
	Brad had been recruiting participants for the study and had even gotten a wave of early responses from parents. This was a perfect example to prove how smoothly things were going.
	
	That being said, the research cycle was still a bit fuzzy. Brad was vaguely aware of some forms and deadlines coming up soon. There was also some committee he was supposed to talk to (what did Ned call it - "HERB"??).
[end]
Speaker project brad.
ChoiceLabel project: Consider project status
ChoiceCondition project project_c: [AvailableCheckpoint agenda]
ChoiceCondition project project_cc: [AvailableCheckpoint agenda]
ChoiceCondition project project_ccc: [AvailableCheckpoint agenda]
Effects project: 
	[set Thread = agenda]
	[OpenCheckpoint agenda what_else_transition]
	[OpenCheckpoint irb t0004_intro]
[end]
Conditions project.
Reusable project e0001.

Content insecurity_start: Brad wonders how he could have possibly gotten this far behind. Could it be his tendency to procrastinate? Or was it that he simply wasn't cut out to be a PhD candidate?
Speaker insecurity_start brad.
ChoiceLabel insecurity_start: Think about the reasons for his disorganization
GoToChoice insecurity_start insecurity_doubt.
ChoiceCondition insecurity_start insecurity_start_c: [AvailableCheckpoint insecurity]
ChoiceCondition insecurity_start insecurity_start_cc: [AvailableCheckpoint insecurity]
ChoiceCondition insecurity_start insecurity_start_ccc: [AvailableCheckpoint insecurity]
Effects insecurity_start: 
	[set Thread = insecurity]
	[add brad_insecure Learnings]
[end]
Conditions insecurity_start: [>= BradInsecurityToNed 3]
Reusable insecurity_start e0001.

Content insecurity_doubt: Brad thinks about the criticism received by Ned and wonders if he is the best fit for this position. Maybe Ned doesn't believe Brad has what it takes to be a researcher.
Speaker insecurity_doubt brad.
ChoiceLabel insecurity_doubt: Feel doubtful about skill level
GoToChoice insecurity_doubt stressed.
GoToChoice insecurity_doubt different_today.
GoToChoice insecurity_doubt say_something.
ChoiceCondition insecurity_doubt insecurity_doubt_c: [AvailableCheckpoint insecurity]
ChoiceCondition insecurity_doubt insecurity_doubt_cc: [AvailableCheckpoint insecurity]
ChoiceCondition insecurity_doubt insecurity_doubt_ccc: [AvailableCheckpoint insecurity]
Effects insecurity_doubt: [set Thread = insecurity]
Conditions insecurity_doubt: [>= BradInsecurityToNed 3]
Reusable insecurity_doubt e0001.

Content stressed: The problem is there's too much to do. Not only does Brad need to create the survey, but he needs to conduct it as well. Getting the IRB proposal took weeks of him working late nights. There's just too much riding on this.
Speaker stressed brad.
ChoiceLabel stressed: Think about stressors
GoToChoice stressed grants_funding.
ChoiceCondition stressed stressed_c: [AvailableCheckpoint insecurity]
ChoiceCondition stressed stressed_cc: [AvailableCheckpoint insecurity]
ChoiceCondition stressed stressed_ccc: [AvailableCheckpoint insecurity]
Effects stressed: [set Thread = insecurity]
Conditions stressed.

Content different_today: Applying for grants and fellowships was really overwhelming. The amount of money you need to do university-level research is mind-boggling.
Speaker different_today brad.
ChoiceLabel different_today: Think about financial expectations
GoToChoice different_today grants_funding.
ChoiceCondition different_today different_today_c: [AvailableCheckpoint insecurity]
ChoiceCondition different_today different_today_cc: [AvailableCheckpoint insecurity]
ChoiceCondition different_today different_today_ccc: [AvailableCheckpoint insecurity]
Effects different_today: [set Thread = insecurity]
Conditions different_today.

Content say_something: Brad thinks about his feelings of inadequacy, and whether he should bring it up with Ned. Confiding in Ned might make him feel better, but on the other hand, it might make Ned more critical of Brad. Maybe Brad should ignore these feelings and try to stay on Ned's good side. Surely, focusing this meeting on all the progress he's made so far will get him some points with his advisor.
Speaker say_something brad.
ChoiceLabel say_something: Reflect on insecurities
GoToChoice say_something exit_bad.
GoToChoice say_something dissapointed_feeling.
ChoiceCondition say_something say_something_c: [AvailableCheckpoint insecurity]
ChoiceCondition say_something say_something_cc: [AvailableCheckpoint insecurity]
ChoiceCondition say_something say_something_ccc: [AvailableCheckpoint insecurity]
Effects say_something: [set Thread = insecurity]
Conditions say_something.

Content exit_bad: 
	There isn't a great way to bring up the stress, because it only highlights his flaws. Let's focus on the work at hand instead.
	
	Having made this decision, Brad felt a little defeated. His emotions will stay bottled up.
[end]
Speaker exit_bad brad.
ChoiceLabel exit_bad: Focus on the progress made.
ChoiceCondition exit_bad exit_bad_c: [AvailableCheckpoint insecurity]
ChoiceCondition exit_bad exit_bad_cc: [AvailableCheckpoint insecurity]
ChoiceCondition exit_bad exit_bad_ccc: [AvailableCheckpoint insecurity]
Effects exit_bad: [set Thread = insecurity]
Conditions exit_bad.

Content grants_funding: 
	Brad wants to tell Ned about how stressed he is, but then he thinks about he thousands of dollars he's received to conduct this research. He needs to show that the money is being put to good use. Brad's hands shake as he takes his papers and begins to display his work. 
	
	Ned leans back in his chair, giving Brad a look of concern. Ned asks “Brad, are you alright? You seem a bit frazzled.”
[end]
Speaker grants_funding brad.
ChoiceLabel grants_funding: Focus on funding
GoToChoice grants_funding frazzled.
ChoiceCondition grants_funding grants_funding_c: [AvailableCheckpoint insecurity]
ChoiceCondition grants_funding grants_funding_cc: [AvailableCheckpoint insecurity]
ChoiceCondition grants_funding grants_funding_ccc: [AvailableCheckpoint insecurity]
Effects grants_funding: [set Thread = insecurity]
Conditions grants_funding.

Content dissapointed_feeling: 
	Brad takes a deep breath.  "I just don't think I'm handling any of this well," he confesses. "I feel like you’re disappointed in me with the way I'm not —"
	
	Ned quickly interrupts, "You've managed to get this far, and you should be proud of yourself. These insecurities you're feeling, they're not an indication of your abilities, they're merely a part of the process."
[end]
Speaker dissapointed_feeling ned.
ChoiceLabel dissapointed_feeling: Vocalize fear of disappointing Ned
GoToChoice dissapointed_feeling frazzled.
ChoiceCondition dissapointed_feeling dissapointed_feeling_c: [AvailableCheckpoint insecurity]
ChoiceCondition dissapointed_feeling dissapointed_feeling_cc: [AvailableCheckpoint insecurity]
ChoiceCondition dissapointed_feeling dissapointed_feeling_ccc: [AvailableCheckpoint insecurity]
Effects dissapointed_feeling: [set Thread = insecurity]
Conditions dissapointed_feeling.

Content frazzled: 
	“Yeah, you're right,” says Brad, feigning confidence. “I’m just a bit stressed, that’s all!” Ned gives Brad a look of concern, then says, "You've clearly put a lot of work into this and everything look great so far. Keep up the good work.”
	As Brad walks out of Ned's office, the lack of any sort of feedback or criticism lingers in the back of his mind. Was Ned secretly disappointed and trying not to hurt Brad's feelings? Is this actually good work? Or is he just barely making the cut?
[end]
Speaker frazzled ned.
ChoiceLabel frazzled: Feel determined
GoToChoice frazzled really_hard.
ChoiceCondition frazzled frazzled_c: [AvailableCheckpoint insecurity]
ChoiceCondition frazzled frazzled_cc: [AvailableCheckpoint insecurity]
ChoiceCondition frazzled frazzled_ccc: [AvailableCheckpoint insecurity]
Effects frazzled: [set Thread = insecurity]
Conditions frazzled.

Content really_hard: Getting lost in his thoughts Brad almost doesn't notice Ned looking at him with an expression of concern. "You seem rather worried, Brad," Ned says, "Is everything okay?" His gaze wasn't unkind, but it didn't help Brad's self-perpetuating doubts. He wanted to respond, to explain the stresses of the survey designs, the IRB proposal, and his fear of disappointment. Instead, Brad simply says, "I get the sense you're disappointed in my output recently." He hoped that his progress so far would defend his worth as a researcher, even if he felt overwhelmed by the challenges ahead.
Speaker really_hard brad.
ChoiceLabel really_hard: Express feeling disappointed
GoToChoice really_hard apologizes.
ChoiceCondition really_hard really_hard_c: [AvailableCheckpoint insecurity]
ChoiceCondition really_hard really_hard_cc: [AvailableCheckpoint insecurity]
ChoiceCondition really_hard really_hard_ccc: [AvailableCheckpoint insecurity]
Effects really_hard: [set Thread = insecurity]
Conditions really_hard.

Content apologizes: Brad anxiously sits across the desk from Professor Ned, shuffling through his latest research notes. His insecurities are overwhelming as he prepares his thoughts. Ned glances up from his paperwork with a look of confusion as he set down his pen. "Brad, you have been doing an excellent job," he says calmly, "I’m sorry if my judgement was too harsh, but trust me when I say that I can see the amount of time and work you have put into this."
Speaker apologizes ned.
ChoiceLabel apologizes: Await Ned's response
GoToChoice apologizes accept_apology.
GoToChoice apologizes doubt_apology.
ChoiceCondition apologizes apologizes_c: [AvailableCheckpoint insecurity]
ChoiceCondition apologizes apologizes_cc: [AvailableCheckpoint insecurity]
ChoiceCondition apologizes apologizes_ccc: [AvailableCheckpoint insecurity]
Effects apologizes: [set Thread = insecurity]
Conditions apologizes.

Content accept_apology: Hearing these words of affirmation relieves some stress of off Brad’s shoulders. Knowing that his work is being, not only recognized, but praised allows him to feel less pressure from judgement. Brad now knows that he is on the right track with his research, and can reference back to his own work to continue forward.
Speaker accept_apology brad.
ChoiceLabel accept_apology: Accept the apology
GoToChoice accept_apology thanks.
ChoiceCondition accept_apology accept_apology_c: [AvailableCheckpoint insecurity]
ChoiceCondition accept_apology accept_apology_cc: [AvailableCheckpoint insecurity]
ChoiceCondition accept_apology accept_apology_ccc: [AvailableCheckpoint insecurity]
Effects accept_apology: [set Thread = insecurity]
Conditions accept_apology.

Content doubt_apology: Brad wants to accept Ned's kind remarks, but the voice in the back of his head tells him that Ned is lying. If Ned was honest and said his work was inadequate, Brad would have to spend time fixing it, precious time they did not have. Maybe Ned is just telling him he’s doing a good job so that he doesn’t waste even more time than he already has.
Speaker doubt_apology brad.
ChoiceLabel doubt_apology: Doubt the apology
GoToChoice doubt_apology thanks.
ChoiceCondition doubt_apology doubt_apology_c: [AvailableCheckpoint insecurity]
ChoiceCondition doubt_apology doubt_apology_cc: [AvailableCheckpoint insecurity]
ChoiceCondition doubt_apology doubt_apology_ccc: [AvailableCheckpoint insecurity]
Effects doubt_apology: [set Thread = insecurity]
Conditions doubt_apology.

Content thanks: "Thanks," Brad says. There is a moment of silence as they look for what to say next. Ned continues to look through the paperwork before saying "I'm glad you spoke to me about this, but now let's get back to the task at hand. Tell me, how are the surveys going? "
Speaker thanks brad.
ChoiceLabel thanks: Back to business
ChoiceCondition thanks thanks_c: [AvailableCheckpoint insecurity]
ChoiceCondition thanks thanks_cc: [AvailableCheckpoint insecurity]
ChoiceCondition thanks thanks_ccc: [AvailableCheckpoint insecurity]
Effects thanks: [set Thread = insecurity]
Conditions thanks.

Content t0004_intro: Brad feels like he’s been letting Ned down with the project as of late. If he talks about how well things are going with the project, maybe Ned will finally be proud of Brad and won’t regret his decision of being the advisor for this study.
Speaker t0004_intro brad.
ChoiceLabel t0004_intro: Consider bringing up project
GoToChoice t0004_intro proud_of_me.
GoToChoice t0004_intro survey_was_fun.
GoToChoice t0004_intro get_ahead.
ChoiceCondition t0004_intro t0004_intro_c: [AvailableCheckpoint irb]
Effects t0004_intro: 
	[set Thread = irb]
	[add brad_wants_ned_to_be_proud Learnings]
[end]
Conditions t0004_intro.

Content proud_of_me: “I’ve gotten a lot of good feedback from some of the participants,” Brad informs Ned.
Speaker proud_of_me brad.
ChoiceLabel proud_of_me: Talk about how well the project is going
GoToChoice proud_of_me ned_shocked.
ChoiceCondition proud_of_me proud_of_me_c: [AvailableCheckpoint irb]
Effects proud_of_me: [set Thread = irb]
Conditions proud_of_me.

Content survey_was_fun: Since he’s been getting ahead in the project, Brad decides that he’ll mention the work he’s done. He pipes up, “Well, I’ve had a lot of fun discussing the survey questions with the parents.”
Speaker survey_was_fun brad.
ChoiceLabel survey_was_fun: Talk about the survey
GoToChoice survey_was_fun ned_shocked.
ChoiceCondition survey_was_fun survey_was_fun_c: [AvailableCheckpoint irb]
Effects survey_was_fun: [set Thread = irb]
Conditions survey_was_fun.

Content get_ahead: 
	Knowing that he’s had a reputation for getting stuff done at the last minute, Brad decides to mention his most recent research endeavor to Ned. This’ll definitely help him be in Ned’s favor.
	
	“Well, I’ve actually been trying to get ahead in the research project,” Brad tries to say nonchalantly.
[end]
Speaker get_ahead brad.
ChoiceLabel get_ahead: Talk about progress on the project
GoToChoice get_ahead sounds_great.
ChoiceCondition get_ahead get_ahead_c: [AvailableCheckpoint irb]
Effects get_ahead: [set Thread = irb]
Conditions get_ahead.

Content sounds_great: Brad notices Ned sitting up a little straighter in his chair. He seems a lot more interested in the conversation now.
Speaker sounds_great ned.
ChoiceLabel sounds_great: Continue
GoToChoice sounds_great sounds_great_2.
ChoiceCondition sounds_great sounds_great_c: [AvailableCheckpoint irb]
ChoiceCondition sounds_great sounds_great_cc: [AvailableCheckpoint irb]
ChoiceCondition sounds_great sounds_great_ccc: [AvailableCheckpoint irb]
Effects sounds_great: [set Thread = irb]
Conditions sounds_great.

Content sounds_great_2: “Wow Brad, that’s amazing! I’d like to know more about what you did.”
Speaker sounds_great_2 ned.
ChoiceLabel sounds_great_2: Continue
GoToChoice sounds_great_2 confession_1.
ChoiceCondition sounds_great_2 sounds_great_2_c: [AvailableCheckpoint irb]
ChoiceCondition sounds_great_2 sounds_great_2_cc: [AvailableCheckpoint irb]
ChoiceCondition sounds_great_2 sounds_great_2_ccc: [AvailableCheckpoint irb]
Effects sounds_great_2.
Conditions sounds_great_2.

Content confession_1: Brad clears his throat, “Well, I kinda conducted one of the surveys.”
Speaker confession_1 brad.
ChoiceLabel confession_1: Tell Ned about the survey
GoToChoice confession_1 ned_shocked.
ChoiceCondition confession_1 confession_1_c: [AvailableCheckpoint irb]
ChoiceCondition confession_1 confession_1_cc: [AvailableCheckpoint irb]
ChoiceCondition confession_1 confession_1_ccc: [AvailableCheckpoint irb]
Effects confession_1: [set Thread = irb]
Conditions confession_1.

Content ned_shocked: “I’m sorry? Could you clarify what you mean by that? What, exactly, did you do?”
Speaker ned_shocked ned.
ChoiceLabel ned_shocked: Continue
GoToChoice ned_shocked brad_panicking.
ChoiceCondition ned_shocked ned_shocked_c: [AvailableCheckpoint irb]
ChoiceCondition ned_shocked ned_shocked_cc: [AvailableCheckpoint irb]
ChoiceCondition ned_shocked ned_shocked_ccc: [AvailableCheckpoint irb]
Effects ned_shocked: [set Thread = irb]
Conditions ned_shocked.

Content brad_panicking: Is Ned pissed? Ned had mentioned in the past that Brad needed to run the surveys by him before sending them to participants. But Brad had just wanted to get ahead.
Speaker brad_panicking brad.
ChoiceLabel brad_panicking: Uh oh.
GoToChoice brad_panicking concession_2.
GoToChoice brad_panicking talked_to_parents.
ChoiceCondition brad_panicking brad_panicking_c: [AvailableCheckpoint irb]
ChoiceCondition brad_panicking brad_panicking_cc: [AvailableCheckpoint irb]
ChoiceCondition brad_panicking brad_panicking_ccc: [AvailableCheckpoint irb]
Effects brad_panicking: [set Thread = irb]
Conditions brad_panicking.
CharacterTag brad_panicking ned expression neutral.
CharacterTag brad_panicking brad expression scared.

Content confession_2: 
	It’s better to own up to his mistake and come clean.
	
	“I actually sent out a pilot survey to see if there was any interest in participating in our research. The parents were so excited and kept asking me about when it was gonna happen that I just interviewed the parents and sent the survey out to them and their kids.”
	
	Brad pauses and waits to see what Ned has to say.
[end]
Speaker confession_2 brad.
ChoiceLabel confession_2: Tell Ned the truth
GoToChoice confession_2 with_concern.
ChoiceCondition confession_2 confession_2_c: [AvailableCheckpoint irb]
ChoiceCondition confession_2 confession_2_cc: [AvailableCheckpoint irb]
ChoiceCondition confession_2 confession_2_ccc: [AvailableCheckpoint irb]
Effects confession_2: [set Thread = irb]
Conditions confession_2.

Content with_concern: "Brad, you know you’re technically not supposed to start interviews without herb approval."
Speaker with_concern ned.
ChoiceLabel with_concern: Ned’s poker face is hard to read
GoToChoice with_concern herb.
ChoiceCondition with_concern with_concern_c: [AvailableCheckpoint irb]
ChoiceCondition with_concern with_concern_cc: [AvailableCheckpoint irb]
ChoiceCondition with_concern with_concern_ccc: [AvailableCheckpoint irb]
Effects with_concern: [set Thread = irb]
Conditions with_concern.

Content talked_to_parents: “Don’t worry Ned, I didn’t do anything major. I was just casually talking to some parents and our study coincidentally came up. They seemed interested so I sent out a survey to see who would want to participate in our study.”
Speaker talked_to_parents brad.
ChoiceLabel talked_to_parents: Brush it off
GoToChoice talked_to_parents when_approval.
ChoiceCondition talked_to_parents talked_to_parents_c: [AvailableCheckpoint irb]
ChoiceCondition talked_to_parents talked_to_parents_cc: [AvailableCheckpoint irb]
ChoiceCondition talked_to_parents talked_to_parents_ccc: [AvailableCheckpoint irb]
Effects talked_to_parents: [set Thread = irb]
Conditions talked_to_parents.

Content when_approval: 
	Ned furrows his eyebrows.
	
	“I don’t seem to recall you getting herb approval,” he says.
[end]
Speaker when_approval ned.
ChoiceLabel when_approval: Continue
GoToChoice when_approval herb.
ChoiceCondition when_approval when_approval_c: [AvailableCheckpoint irb]
ChoiceCondition when_approval when_approval_cc: [AvailableCheckpoint irb]
ChoiceCondition when_approval when_approval_ccc: [AvailableCheckpoint irb]
Effects when_approval: [set Thread = irb]
Conditions when_approval.

Content herb: 
	Brad is confused. Who is Herb and why does Ned keep bringing them up?
	
	“Who is this Herb you keep mentioning, and why do we need his approval?”
[end]
Speaker herb brad.
ChoiceLabel herb: Ask who Herb is
GoToChoice herb irb.
GoToChoice herb oregano.
ChoiceCondition herb herb_c: [AvailableCheckpoint irb]
ChoiceCondition herb herb_cc: [AvailableCheckpoint irb]
ChoiceCondition herb herb_ccc: [AvailableCheckpoint irb]
Effects herb: [set Thread = irb]
Conditions herb.

Content oregano: 
	Come to think of it, Brad did see Ned going ham with the oregano shaker at the local pizzeria in their college town. Maybe that’s what Ned is talking about. 
	
	 “Could it be that you might be talking about…seasonings? Like oregano?” Brad asks with confusion.
[end]
Speaker oregano brad.
ChoiceLabel oregano: Does Ned have a thing for herbs?
GoToChoice oregano irb.
Effects oregano: [set Thread = irb]
Conditions oregano.

Content irb: 
	“Oh, sorry,” Ned half chortles. “I pronounce it as “herb” but I’m actually referring to the IRB. It’s an acronym, I-R-B – it stands for Institutional Review Board.” 
	
	Ned fumbles for some papers.
	
	“The IRB reviews research studies to ensure that they comply with applicable regulations, meet commonly accepted ethical standards, follow institutional policies, and adequately protect research participants.”
[end]
Speaker irb ned.
ChoiceLabel irb: Continue
GoToChoice irb confession_3.
Effects irb: [set Thread = irb]
Conditions irb.

Content confession_3: “Oh…the thing is, I didn’t get approval yet.” Brad sheepishly looks down at his scuffed-up shoes.
Speaker confession_3 brad.
ChoiceLabel confession_3: Continue
GoToChoice confession_3 ned_dont_press.
Effects confession_3: [set Thread = irb]
Conditions confession_3.

Content ned_dont_press: 
	"No doubt the IRB is a slow process." Ned takes a sip of coffee and looks thoughfully out the window.
	
	The IRB has a lot on their plate - they have to ensure <b>beneficence</b>, <b>justice</b>, and <b> respect for persons</b>.
[end]
Speaker ned_dont_press ned.
ChoiceLabel ned_dont_press: Continue
GoToChoice ned_dont_press bad_feeling.
GoToChoice ned_dont_press brad_goes_along.
ChoiceCondition ned_dont_press ned_dont_press_c: [AvailableCheckpoint irb]
ChoiceCondition ned_dont_press ned_dont_press_cc: [AvailableCheckpoint irb]
ChoiceCondition ned_dont_press ned_dont_press_ccc: [AvailableCheckpoint irb]
Effects ned_dont_press: 
	[set Thread = irb]
	[OpenThreads]
[end]
Conditions ned_dont_press.

Content bad_feeling: 
	Ned didn’t really make it clear on whether it is okay to keep working on the project or if he should wait. But now that Brad knows what the IRB is, he feels guilty about conducting his survey. 
	
	“Hey Ned, thanks for explaining the IRB to me. Based on what you said, I think I’ll pause the study for now and wait until it gets approved before moving forward with the project.”
[end]
Speaker bad_feeling brad.
ChoiceLabel bad_feeling: Maybe continuing the surveys is a bad idea
ChoiceCondition bad_feeling bad_feeling_c: [AvailableCheckpoint irb]
ChoiceCondition bad_feeling bad_feeling_cc: [AvailableCheckpoint irb]
ChoiceCondition bad_feeling bad_feeling_ccc: [AvailableCheckpoint irb]
Effects bad_feeling: [set Thread = irb]
Conditions bad_feeling.

Content brad_goes_along: Ned didn’t press it, so it must not be a big deal. If Ned isn’t concerned about the IRB approval, then Brad doesn’t need to be either.
Speaker brad_goes_along brad.
ChoiceLabel brad_goes_along: It probably doesn’t matter that much
ChoiceCondition brad_goes_along brad_goes_along_c: [AvailableCheckpoint irb]
ChoiceCondition brad_goes_along brad_goes_along_cc: [AvailableCheckpoint irb]
ChoiceCondition brad_goes_along brad_goes_along_ccc: [AvailableCheckpoint irb]
Effects brad_goes_along: [set Thread = irb]
Conditions brad_goes_along.

Speaker beneficence_intro brad.
ChoiceLabel beneficence_intro: Ask Ned about beneficence
GoToChoice beneficence_intro beneficence_define.
Effects beneficence_intro: 
	[set Thread = beneficence]
	[OpenCheckpoint beneficence beneficence_define]
	[add beneficence_intro Learnings]
[end]
Conditions beneficence_intro.

Speaker beneficence_define ned.
ChoiceLabel beneficence_define: Ned defines beneficence
GoToChoice beneficence_define research_good_thing.
GoToChoice beneficence_define research_is_beneficial.
ChoiceCondition beneficence_define beneficence_define_c: [AvailableCheckpoint beneficence]
ChoiceCondition beneficence_define beneficence_define_cc: [AvailableCheckpoint beneficence]
ChoiceCondition beneficence_define beneficence_define_ccc: [AvailableCheckpoint beneficence]
Effects beneficence_define: [set Thread = beneficence]
Conditions beneficence_define.

Speaker research_good_thing brad.
ChoiceLabel research_good_thing: Point out how research is already a good thing
GoToChoice research_good_thing not_enough.
Effects research_good_thing: [set Thread = beneficence]
Conditions research_good_thing.

Speaker not_enough ned.
ChoiceLabel not_enough: Continue
GoToChoice not_enough brad_confused.
ChoiceCondition not_enough not_enough_c: [AvailableCheckpoint beneficence]
ChoiceCondition not_enough not_enough_cc: [AvailableCheckpoint beneficence]
ChoiceCondition not_enough not_enough_ccc: [AvailableCheckpoint beneficence]
Effects not_enough: 
	[set Thread = beneficence]
	[OpenCheckpoint beneficence brad_confused]
[end]
Conditions not_enough.

Speaker research_is_beneficial brad.
ChoiceLabel research_is_beneficial: Affirm that their research is beneficial
GoToChoice research_is_beneficial everyone_thinks_research_good.
Effects research_is_beneficial: [set Thread = beneficence]
Conditions research_is_beneficial.

Speaker everyone_thinks_research_good ned.
ChoiceLabel everyone_thinks_research_good: Continue
GoToChoice everyone_thinks_research_good brad_confused.
ChoiceCondition everyone_thinks_research_good everyone_thinks_research_good_c: [AvailableCheckpoint beneficence]
ChoiceCondition everyone_thinks_research_good everyone_thinks_research_good_cc: [AvailableCheckpoint beneficence]
ChoiceCondition everyone_thinks_research_good everyone_thinks_research_good_ccc: [AvailableCheckpoint beneficence]
Effects everyone_thinks_research_good: 
	[set Thread = beneficence]
	[OpenCheckpoint beneficence brad_confused]
[end]
Conditions everyone_thinks_research_good.

Speaker brad_confused brad.
ChoiceLabel brad_confused: Ask Ned to clarify beneficence
GoToChoice brad_confused medical_trials.
Effects brad_confused: [set Thread = beneficence]
Conditions brad_confused.

Speaker medical_trials ned.
ChoiceLabel medical_trials: Continue
GoToChoice medical_trials brad_unsure.
GoToChoice medical_trials brad_curious.
GoToChoice medical_trials brad_cocky.
ChoiceCondition medical_trials medical_trials_c: [AvailableCheckpoint beneficence]
ChoiceCondition medical_trials medical_trials_cc: [AvailableCheckpoint beneficence]
ChoiceCondition medical_trials medical_trials_ccc: [AvailableCheckpoint beneficence]
Effects medical_trials: [set Thread = beneficence]
Conditions medical_trials.

Speaker brad_unsure brad.
ChoiceLabel brad_unsure: Unsurely nod in agreement
GoToChoice brad_unsure do_u_get_it.
ChoiceCondition brad_unsure brad_unsure_c: [AvailableCheckpoint beneficence]
ChoiceCondition brad_unsure brad_unsure_cc: [AvailableCheckpoint beneficence]
ChoiceCondition brad_unsure brad_unsure_ccc: [AvailableCheckpoint beneficence]
Effects brad_unsure: 
	[set Thread = beneficence]
	[set BradInsecurityToNed = BradInsecurityToNed + 1]
[end]
Conditions brad_unsure.

Speaker brad_cocky brad.
ChoiceLabel brad_cocky: Affirm that they're just asking questions here
GoToChoice brad_cocky side_effects.
ChoiceCondition brad_cocky brad_cocky_c: [AvailableCheckpoint beneficence]
ChoiceCondition brad_cocky brad_cocky_cc: [AvailableCheckpoint beneficence]
ChoiceCondition brad_cocky brad_cocky_ccc: [AvailableCheckpoint beneficence]
Effects brad_cocky: [set Thread = beneficence]
Conditions brad_cocky.

Speaker brad_curious brad.
ChoiceLabel brad_curious: Ask how this is connected to our case
GoToChoice brad_curious side_effects.
Effects brad_curious: [set Thread = beneficence]
Conditions brad_curious.

Speaker do_u_get_it ned.
ChoiceLabel do_u_get_it: Continue
GoToChoice do_u_get_it brad_silent.
ChoiceCondition do_u_get_it do_u_get_it_c: [AvailableCheckpoint beneficence]
Effects do_u_get_it: [set Thread = beneficence]
Conditions do_u_get_it.

Speaker brad_silent brad.
ChoiceLabel brad_silent: Sit in silence
GoToChoice brad_silent brad_notices.
Effects brad_silent: [set Thread = beneficence]
Conditions brad_silent.

Speaker brad_notices brad.
ChoiceLabel brad_notices: Notice Ned's expression
GoToChoice brad_notices u_dont_understand.
Effects brad_notices: [set Thread = beneficence]
Conditions brad_notices.

Speaker u_dont_understand ned.
ChoiceLabel u_dont_understand: Continue
GoToChoice u_dont_understand side_effects.
Effects u_dont_understand: [set Thread = beneficence]
Conditions u_dont_understand.

Speaker side_effects ned.
ChoiceLabel side_effects: Wait for Ned's response
GoToChoice side_effects avoid_harm.
GoToChoice side_effects apply_principle.
ChoiceCondition side_effects side_effects_c: [AvailableCheckpoint beneficence]
ChoiceCondition side_effects side_effects_cc: [AvailableCheckpoint beneficence]
ChoiceCondition side_effects side_effects_ccc: [AvailableCheckpoint beneficence]
Effects side_effects: 
	[set Thread = beneficence]
	[OpenCheckpoint beneficence side_effects_transition]
[end]
Conditions side_effects.

Speaker side_effects_transition brad.
ChoiceLabel side_effects_transition: Shift back to beneficence
GoToChoice side_effects_transition avoid_harm.
GoToChoice side_effects_transition apply_principle.
ChoiceCondition side_effects_transition side_effects_transition_c: [AvailableCheckpoint beneficence]
ChoiceCondition side_effects_transition side_effects_transition_cc: [AvailableCheckpoint beneficence]
ChoiceCondition side_effects_transition side_effects_transition_ccc: [AvailableCheckpoint beneficence]
Effects side_effects_transition: [set Thread = beneficence]
Conditions side_effects_transition.

Speaker avoid_harm brad.
ChoiceLabel avoid_harm: Ask Ned if avoiding harm is even possible
GoToChoice avoid_harm figuring_out.
ChoiceCondition avoid_harm avoid_harm_c: [AvailableCheckpoint beneficence]
ChoiceCondition avoid_harm avoid_harm_cc: [AvailableCheckpoint beneficence]
ChoiceCondition avoid_harm avoid_harm_ccc: [AvailableCheckpoint beneficence]
Effects avoid_harm: [set Thread = beneficence]
Conditions avoid_harm.

Speaker apply_principle brad.
ChoiceLabel apply_principle: Ask Ned how this works in practice
GoToChoice apply_principle figuring_out.
Effects apply_principle: [set Thread = beneficence]
Conditions apply_principle.

Speaker figuring_out ned.
ChoiceLabel figuring_out: Listen to Ned's answer
GoToChoice figuring_out minimize_maximize.
Effects figuring_out: [set Thread = beneficence]
Conditions figuring_out.

Speaker minimize_maximize ned.
ChoiceLabel minimize_maximize: Nod head
GoToChoice minimize_maximize makes_sense.
ChoiceCondition minimize_maximize minimize_maximize_c: [AvailableCheckpoint beneficence]
ChoiceCondition minimize_maximize minimize_maximize_cc: [AvailableCheckpoint beneficence]
ChoiceCondition minimize_maximize minimize_maximize_ccc: [AvailableCheckpoint beneficence]
Effects minimize_maximize: [set Thread = beneficence]
Conditions minimize_maximize.

Speaker makes_sense brad.
ChoiceLabel makes_sense: Makes sense
ChoiceCondition makes_sense makes_sense_c: [AvailableCheckpoint beneficence]
ChoiceCondition makes_sense makes_sense_cc: [AvailableCheckpoint beneficence]
ChoiceCondition makes_sense makes_sense_ccc: [AvailableCheckpoint beneficence]
Effects makes_sense: 
	[set Thread = beneficence]
	[CloseCheckpoint beneficence side_effects_transition]
	[add beneficence Learnings]
[end]
Conditions makes_sense.

Content justice_intro: "I am confused by something. Even if a person gets harmed by the research doesn't society still benefit at the end?"
Speaker justice_intro brad.
ChoiceLabel justice_intro: Ask about harm to participants
GoToChoice justice_intro brad_jokes.
GoToChoice justice_intro why_board.
ChoiceCondition justice_intro justice_intro_c: [AvailableCheckpoint justice]
Effects justice_intro: 
	[set Thread = justice]
	[add justice_intro Learnings]
[end]
Conditions justice_intro.

Content brad_jokes: "I mean, sure it sucks that they were part of a bad experiment, but hey! It's not like our data isn't being harvested all the time anyway! At least they're getting paid."
Speaker brad_jokes brad.
ChoiceLabel brad_jokes: Continues with a joke
GoToChoice brad_jokes ned_corrects.
ChoiceCondition brad_jokes brad_jokes_c: [AvailableCheckpoint justice]
Effects brad_jokes: [set Thread = justice]
Conditions brad_jokes.

Content why_board: "It seems like the worst thing that can happen with bad ethical practices is that people are just made uncomfortable. Why would this need a whole board to overview it?"
Speaker why_board brad.
ChoiceLabel why_board: Continue and ask for clarification
GoToChoice why_board principles_important.
ChoiceCondition why_board why_board_c: [AvailableCheckpoint justice]
ChoiceCondition why_board why_board_cc: [AvailableCheckpoint justice]
ChoiceCondition why_board why_board_ccc: [AvailableCheckpoint justice]
Effects why_board: [set Thread = justice]
Conditions why_board.

Content ned_corrects: "The historical events behind these principles are very sensitive topics, and should be handled with empathy for the people affected by them."
Speaker ned_corrects ned.
ChoiceLabel ned_corrects: Continue
GoToChoice ned_corrects brad_apologizes.
GoToChoice ned_corrects just_making_a_joke.
ChoiceCondition ned_corrects ned_corrects_c: [AvailableCheckpoint justice]
ChoiceCondition ned_corrects ned_corrects_cc: [AvailableCheckpoint justice]
ChoiceCondition ned_corrects ned_corrects_ccc: [AvailableCheckpoint justice]
Effects ned_corrects: 
	[set Thread = justice]
	[OpenCheckpoint justice ned_corrects_transition]
[end]
Conditions ned_corrects.

Content ned_corrects_transition: Back to the topic of justice. Brad probably shouldn't have joked about it.
Speaker ned_corrects_transition brad.
ChoiceLabel ned_corrects_transition: Bring up justice again
GoToChoice ned_corrects_transition brad_apologizes.
GoToChoice ned_corrects_transition just_making_a_joke.
ChoiceCondition ned_corrects_transition ned_corrects_transition_c: [AvailableCheckpoint justice]
ChoiceCondition ned_corrects_transition ned_corrects_transition_cc: [AvailableCheckpoint justice]
ChoiceCondition ned_corrects_transition ned_corrects_transition_ccc: [AvailableCheckpoint justice]
Effects ned_corrects_transition: [set Thread = justice]
Conditions ned_corrects_transition.

Content principles_important: "I understand your confusion, but in the past, violation of these principle of justice has led to negative impacts on the lives of various people. Including substantial harm in some, specifically marginalized, populations."
Speaker principles_important ned.
ChoiceLabel principles_important: Continue
GoToChoice principles_important wym.
ChoiceCondition principles_important principles_important_c: [AvailableCheckpoint justice]
ChoiceCondition principles_important principles_important_cc: [AvailableCheckpoint justice]
ChoiceCondition principles_important principles_important_ccc: [AvailableCheckpoint justice]
Effects principles_important: 
	[set Thread = justice]
	[OpenCheckpoint justice wym]
[end]
Conditions principles_important.

Content just_making_a_joke: "I was just trying to make a joke. Didn't know this was so serious."
Speaker just_making_a_joke brad.
ChoiceLabel just_making_a_joke: Clarify statement
GoToChoice just_making_a_joke dont_take_lightly.
ChoiceCondition just_making_a_joke just_making_a_joke_c: [AvailableCheckpoint justice]
ChoiceCondition just_making_a_joke just_making_a_joke_cc: [AvailableCheckpoint justice]
ChoiceCondition just_making_a_joke just_making_a_joke_ccc: [AvailableCheckpoint justice]
Effects just_making_a_joke: [set Thread = justice]
Conditions just_making_a_joke.

Content brad_apologizes: "I'm sorry for my insensitivity, but I'm just wondering why this is so serious?"
Speaker brad_apologizes brad.
ChoiceLabel brad_apologizes: Apologize for joke
GoToChoice brad_apologizes principles_important.
Effects brad_apologizes: [set Thread = justice]
Conditions brad_apologizes.

Content dont_take_lightly: "Ned I understand that you're trying to take this lightly, but this isn't a light topic. In the past, violations of the guidelines have led to catastrophic harm to people, so it's especially important to approach these topics with sensitivity."
Speaker dont_take_lightly ned.
ChoiceLabel dont_take_lightly: Continue
GoToChoice dont_take_lightly wym.
ChoiceCondition dont_take_lightly dont_take_lightly_c: [AvailableCheckpoint justice]
ChoiceCondition dont_take_lightly dont_take_lightly_cc: [AvailableCheckpoint justice]
ChoiceCondition dont_take_lightly dont_take_lightly_ccc: [AvailableCheckpoint justice]
Effects dont_take_lightly: 
	[set Thread = justice]
	[OpenCheckpoint justice wym]
[end]
Conditions dont_take_lightly.

Content wym: "Whole populations were harmed just because people didn't follow these IRB principles?! How?"
Speaker wym brad.
ChoiceLabel wym: Ask about how populations were harmed
GoToChoice wym syphilis.
Effects wym: [set Thread = justice]
Conditions wym.

Content syphilis: ((write explanation here)) "Does that make sense?"
Speaker syphilis ned.
ChoiceLabel syphilis: Continue
GoToChoice syphilis violation_of_something.
GoToChoice syphilis violation_of_ben.
ChoiceCondition syphilis syphilis_c: [AvailableCheckpoint justice]
ChoiceCondition syphilis syphilis_cc: [AvailableCheckpoint justice]
ChoiceCondition syphilis syphilis_ccc: [AvailableCheckpoint justice]
Effects syphilis: [set Thread = justice]
Conditions syphilis.

Content violation_of_ben: "So, did they violate beneficence?"
Speaker violation_of_ben brad.
ChoiceLabel violation_of_ben: Ask about beneficence
GoToChoice violation_of_ben yes_beneficence.
ChoiceCondition violation_of_ben violation_of_ben_c: [AvailableCheckpoint justice]
ChoiceCondition violation_of_ben violation_of_ben_cc: [AvailableCheckpoint justice]
ChoiceCondition violation_of_ben violation_of_ben_ccc: [AvailableCheckpoint justice]
Effects violation_of_ben: [set Thread = justice]
Conditions violation_of_ben.

Content yes_beneficence: "Sort of. While, yes, the study did not protect them from harm, it can be better categorized as a violation of Justice."
Speaker yes_beneficence ned.
ChoiceLabel yes_beneficence: Continue
GoToChoice yes_beneficence violation_of_justice.
ChoiceCondition yes_beneficence yes_beneficence_c: [AvailableCheckpoint justice]
ChoiceCondition yes_beneficence yes_beneficence_cc: [AvailableCheckpoint justice]
ChoiceCondition yes_beneficence yes_beneficence_ccc: [AvailableCheckpoint justice]
Effects yes_beneficence: [set Thread = justice]
Conditions yes_beneficence.

Content violation_of_something: "So, what principle did they violate then?"
Speaker violation_of_something brad.
ChoiceLabel violation_of_something: Ask about over principles
GoToChoice violation_of_something violation_of_justice.
ChoiceCondition violation_of_something violation_of_something_c: [AvailableCheckpoint justice]
ChoiceCondition violation_of_something violation_of_something_cc: [AvailableCheckpoint justice]
ChoiceCondition violation_of_something violation_of_something_ccc: [AvailableCheckpoint justice]
Effects violation_of_something: [set Thread = justice]
Conditions violation_of_something.

Content violation_of_justice: "This study was a violation of Justice, which means that the people were denied a benefit without a good reason or a burden was imposed onto them."
Speaker violation_of_justice ned.
ChoiceLabel violation_of_justice: Continue
ChoiceCondition violation_of_justice violation_of_justice_c: [AvailableCheckpoint justice]
ChoiceCondition violation_of_justice violation_of_justice_cc: [AvailableCheckpoint justice]
ChoiceCondition violation_of_justice violation_of_justice_ccc: [AvailableCheckpoint justice]
Effects violation_of_justice: 
	[set Thread = justice]
	[CloseAllCheckpoints justice]
	[add justice Learnings]
[end]
Conditions violation_of_justice.

Content respect_intro: Should I be respectful?
Speaker respect_intro brad.
ChoiceLabel respect_intro: Ask about respect for persons
GoToChoice respect_intro placeholder.
Effects respect_intro: [set Thread = respect]
Conditions respect_intro.
Reusable respect_intro e0001.

Content placeholder: placeholder
Speaker placeholder ned.
ChoiceLabel placeholder: Placeholder
Effects placeholder: [set Thread = respect]
Conditions placeholder.
Reusable placeholder e0001.

Content top_level_fallback: You got nothin going on
Effects top_level_fallback: [set Thread = respect]
Conditions top_level_fallback.
Reusable top_level_fallback e0001.

Content you_remember: Ned nonchalantly glances at Brad. "Are you aware of the Milgram study?"
Speaker you_remember ned.
ChoiceLabel you_remember: Ned brings up Milgram study
GoToChoice you_remember milgram_confusion.
GoToChoice you_remember milgram_blank_stare.
ChoiceCondition you_remember you_remember_c: [AvailableCheckpoint milgram]
ChoiceCondition you_remember you_remember_cc: [AvailableCheckpoint milgram]
ChoiceCondition you_remember you_remember_ccc: [AvailableCheckpoint milgram]
Effects you_remember: 
	[set Thread = milgram]
	[add milgram_intro Learnings]
[end]
Conditions you_remember.

Content milgram_confusion: Brad pipes up. "That's the one where they were in prison right?"
Speaker milgram_confusion brad.
ChoiceLabel milgram_confusion: Yes, it was the prison one
GoToChoice milgram_confusion describe_milgram1.
ChoiceCondition milgram_confusion milgram_confusion_c: [AvailableCheckpoint milgram]
ChoiceCondition milgram_confusion milgram_confusion_cc: [AvailableCheckpoint milgram]
ChoiceCondition milgram_confusion milgram_confusion_ccc: [AvailableCheckpoint milgram]
Effects milgram_confusion: [set Thread = milgram]
Conditions milgram_confusion.

Content milgram_blank_stare: Ned blankly stares at Brad. As he feels the intense stare of his advisor, he can feel his own soul leave his body.
Speaker milgram_blank_stare brad.
ChoiceLabel milgram_blank_stare: Continue
ChoiceCondition milgram_blank_stare milgram_blank_stare_c: [AvailableCheckpoint milgram]
ChoiceCondition milgram_blank_stare milgram_blank_stare_cc: [AvailableCheckpoint milgram]
ChoiceCondition milgram_blank_stare milgram_blank_stare_ccc: [AvailableCheckpoint milgram]
Effects milgram_blank_stare: [set Thread = milgram]
Conditions milgram_blank_stare.

Content omg_yes: 
	The Milgram experiement, how could Brad forget! It was one of his favorite experiements covered in his Psychology classes.
	
	Brad responds to Ned, "Yeah, I remember the Milgram experiment, with the electric shocks."
[end]
Speaker omg_yes brad.
ChoiceLabel omg_yes: Yes, it was electric
ChoiceCondition omg_yes omg_yes_c: [AvailableCheckpoint milgram]
ChoiceCondition omg_yes omg_yes_cc: [AvailableCheckpoint milgram]
ChoiceCondition omg_yes omg_yes_ccc: [AvailableCheckpoint milgram]
Effects omg_yes: [set Thread = milgram]
Conditions omg_yes.

Content describe_milgram1: todo
Speaker describe_milgram1 ned.
ChoiceLabel describe_milgram1: todo
ChoiceCondition describe_milgram1 describe_milgram1_c: [AvailableCheckpoint milgram]
ChoiceCondition describe_milgram1 describe_milgram1_cc: [AvailableCheckpoint milgram]
ChoiceCondition describe_milgram1 describe_milgram1_ccc: [AvailableCheckpoint milgram]
Effects describe_milgram1: [set Thread = milgram]
Conditions describe_milgram1.

Content describe_milgram2: Ned smiles. It felt goo
Speaker describe_milgram2 ned.
ChoiceLabel describe_milgram2: Cringe at mistake
ChoiceCondition describe_milgram2 describe_milgram2_c: [AvailableCheckpoint milgram]
ChoiceCondition describe_milgram2 describe_milgram2_cc: [AvailableCheckpoint milgram]
ChoiceCondition describe_milgram2 describe_milgram2_ccc: [AvailableCheckpoint milgram]
Effects describe_milgram2: [set Thread = milgram]
Conditions describe_milgram2.

Content milgram_cringe: Brad cringes. I should have known that. I just watched a documentary about this!
Speaker milgram_cringe brad.
ChoiceCondition milgram_cringe milgram_cringe_c: [AvailableCheckpoint milgram]
ChoiceCondition milgram_cringe milgram_cringe_cc: [AvailableCheckpoint milgram]
ChoiceCondition milgram_cringe milgram_cringe_ccc: [AvailableCheckpoint milgram]
Effects milgram_cringe: [set Thread = milgram]
Conditions milgram_cringe.

Speaker brad_why brad.
ChoiceLabel brad_why: Ask why Ned brings it up
ChoiceCondition brad_why brad_why_c: [AvailableCheckpoint milgram]
ChoiceCondition brad_why brad_why_cc: [AvailableCheckpoint milgram]
ChoiceCondition brad_why brad_why_ccc: [AvailableCheckpoint milgram]
Effects brad_why: [set Thread = milgram]
Conditions brad_why.

Speaker milgram_explain ned.
ChoiceLabel milgram_explain: Explanation
ChoiceCondition milgram_explain milgram_explain_c: [AvailableCheckpoint milgram]
ChoiceCondition milgram_explain milgram_explain_cc: [AvailableCheckpoint milgram]
ChoiceCondition milgram_explain milgram_explain_ccc: [AvailableCheckpoint milgram]
Effects milgram_explain: 
	[set Thread = milgram]
	[add milgram Learnings]
[end]
Conditions milgram_explain.



# Declare the StorySpec
[randomly]
Want e0001 entry.
Want e0001 insecurity.
Want e0001 justice.
Want e0001 beneficence.
Want e0001 justice.
Want e0001 irb.
Want e0001 pedagogy_1.
Want e0001 pedagogy_2.
Want e0001 pedagogy_3.
Want e0001 pedagogy_4.
Want e0001 pedagogy_5.
Want e0001 pedagogy_6.
Want e0001 pedagogy_7.
Want e0001 pedagogy_8.
Want e0001 pedagogy_9.
Want e0001 pedagogy_10.
Want e0001 pedagogy_11.
Want e0001 pedagogy_12.
Want e0001 pedagogy_13.
Want e0001 pedagogy_14.
Want e0001 pedagogy_15.
Want e0001 pedagogy_16.


[randomly]
Fulfilled entry: [Expanded entry CurrentScene]
Fulfilled justice: [Expanded brad_confused CurrentScene]
Fulfilled beneficence: [Expanded t0006_intro CurrentScene]
Fulfilled irb: [Expanded t0004_intro CurrentScene]
Fulfilled entry: [Expanded entry CurrentScene]
Fulfilled insecurity: [Expanded t_start_fix CurrentScene]
Fulfilled pedagogy_1: [Length Learnings ?l] [> ?l 1] # Eventually we want the score to be able to check *how close* to the goal we are
Fulfilled pedagogy_2: [Length Learnings ?l] [> ?l 2]
Fulfilled pedagogy_3: [Length Learnings ?l] [> ?l 3]
Fulfilled pedagogy_4: [Length Learnings ?l] [> ?l 4]
Fulfilled pedagogy_5: [Length Learnings ?l] [> ?l 5]
Fulfilled pedagogy_6: [Length Learnings ?l] [> ?l 6]
Fulfilled pedagogy_7: [Length Learnings ?l] [> ?l 7]
Fulfilled pedagogy_8: [Length Learnings ?l] [> ?l 8]
Fulfilled pedagogy_9: [Length Learnings ?l] [> ?l 9]
Fulfilled pedagogy_10: [Length Learnings ?l] [> ?l 10]
Fulfilled pedagogy_11: [Length Learnings ?l] [> ?l 11]
Fulfilled pedagogy_12: [Length Learnings ?l] [> ?l 12]
Fulfilled pedagogy_13: [Length Learnings ?l] [> ?l 13]
Fulfilled pedagogy_14: [Length Learnings ?l] [> ?l 14]
Fulfilled pedagogy_15: [Length Learnings ?l] [> ?l 15]
Fulfilled pedagogy_16: [Length Learnings ?l] [> ?l 16]
